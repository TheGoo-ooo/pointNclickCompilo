
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftADD_OPleftMULT_OPrightUMINUSNUMBER ADD_OP MULT_OP ID STRING WHILE IF PRINT CLI RECT SCENE FUNC IMGprogram : statement\n        | statement ';'\n        | statement ';' programstatement : ID '=' expression\n        | member '=' expression\n        | structure\n        | PRINT expressionstructure : WHILE '(' expression ')' '{' program '}'\n        | IF '(' expression ')' '{' program '}'\n        | ':' expression scene : SCENE '(' expression ',' '[' id_list ']' ')' cli : CLI '(' expression ',' rect ')' '{' program '}' rect : RECT '(' expression ',' expression ',' expression ',' expression ')' id_list : expression\n    | expression ',' id_list expression : expression ADD_OP expression\n         | expression MULT_OP expressionexpression : NUMBERexpression : IDexpression : STRINGexpression : sceneexpression : '{' program '}' expression : '(' expression ')' member : iden '.' climemberiden : ID climember : FUNC\n        | IMG expression : ADD_OP expression %prec UMINUS"
    
_lr_action_items = {'ID':([0,6,10,11,12,13,15,20,21,24,25,30,31,35,49,50,51,58,],[3,17,17,3,17,17,17,3,17,17,17,17,17,17,3,3,17,17,]),'PRINT':([0,11,20,49,50,],[6,6,6,6,6,]),'WHILE':([0,11,20,49,50,],[8,8,8,8,8,]),'IF':([0,11,20,49,50,],[9,9,9,9,9,]),':':([0,11,20,49,50,],[10,10,10,10,10,]),'$end':([1,2,5,11,14,16,17,18,19,26,27,28,29,32,41,42,43,44,56,57,61,],[0,-1,-6,-2,-7,-18,-19,-20,-21,-10,-3,-4,-5,-28,-16,-17,-22,-23,-8,-9,-11,]),'}':([2,5,11,14,16,17,18,19,26,27,28,29,32,33,41,42,43,44,52,53,56,57,61,],[-1,-6,-2,-7,-18,-19,-20,-21,-10,-3,-4,-5,-28,43,-16,-17,-22,-23,56,57,-8,-9,-11,]),';':([2,5,14,16,17,18,19,26,28,29,32,41,42,43,44,56,57,61,],[11,-6,-7,-18,-19,-20,-21,-10,-4,-5,-28,-16,-17,-22,-23,-8,-9,-11,]),'=':([3,4,36,37,38,],[12,13,-24,-26,-27,]),'.':([3,7,],[-25,23,]),'NUMBER':([6,10,12,13,15,21,24,25,30,31,35,51,58,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'STRING':([6,10,12,13,15,21,24,25,30,31,35,51,58,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'{':([6,10,12,13,15,21,24,25,30,31,35,46,47,51,58,],[20,20,20,20,20,20,20,20,20,20,20,49,50,20,20,]),'(':([6,8,9,10,12,13,15,21,22,24,25,30,31,35,51,58,],[21,24,25,21,21,21,21,21,35,21,21,21,21,21,21,21,]),'ADD_OP':([6,10,12,13,14,15,16,17,18,19,21,24,25,26,28,29,30,31,32,34,35,39,40,41,42,43,44,45,51,54,58,61,],[15,15,15,15,30,15,-18,-19,-20,-21,15,15,15,30,30,30,15,15,-28,30,15,30,30,-16,-17,-22,-23,30,15,30,15,-11,]),'SCENE':([6,10,12,13,15,21,24,25,30,31,35,51,58,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'MULT_OP':([14,16,17,18,19,26,28,29,32,34,39,40,41,42,43,44,45,54,61,],[31,-18,-19,-20,-21,31,31,31,-28,31,31,31,31,-17,-22,-23,31,31,-11,]),')':([16,17,18,19,32,34,39,40,41,42,43,44,59,61,],[-18,-19,-20,-21,-28,44,46,47,-16,-17,-22,-23,61,-11,]),',':([16,17,18,19,32,41,42,43,44,45,54,61,],[-18,-19,-20,-21,-28,-16,-17,-22,-23,48,58,-11,]),']':([16,17,18,19,32,41,42,43,44,54,55,60,61,],[-18,-19,-20,-21,-28,-16,-17,-22,-23,-14,59,-15,-11,]),'FUNC':([23,],[37,]),'IMG':([23,],[38,]),'[':([48,],[51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,11,20,49,50,],[1,27,33,52,53,]),'statement':([0,11,20,49,50,],[2,2,2,2,2,]),'member':([0,11,20,49,50,],[4,4,4,4,4,]),'structure':([0,11,20,49,50,],[5,5,5,5,5,]),'iden':([0,11,20,49,50,],[7,7,7,7,7,]),'expression':([6,10,12,13,15,21,24,25,30,31,35,51,58,],[14,26,28,29,32,34,39,40,41,42,45,54,54,]),'scene':([6,10,12,13,15,21,24,25,30,31,35,51,58,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'climember':([23,],[36,]),'id_list':([51,58,],[55,60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','parser.py',20),
  ('program -> statement ;','program',2,'p_program','parser.py',21),
  ('program -> statement ; program','program',3,'p_program','parser.py',22),
  ('statement -> ID = expression','statement',3,'p_statement','parser.py',32),
  ('statement -> member = expression','statement',3,'p_statement','parser.py',33),
  ('statement -> structure','statement',1,'p_statement','parser.py',34),
  ('statement -> PRINT expression','statement',2,'p_statement','parser.py',35),
  ('structure -> WHILE ( expression ) { program }','structure',7,'p_structure','parser.py',46),
  ('structure -> IF ( expression ) { program }','structure',7,'p_structure','parser.py',47),
  ('structure -> : expression','structure',2,'p_structure','parser.py',48),
  ('scene -> SCENE ( expression , [ id_list ] )','scene',8,'p_scene_type','parser.py',59),
  ('cli -> CLI ( expression , rect ) { program }','cli',9,'p_cli_type','parser.py',64),
  ('rect -> RECT ( expression , expression , expression , expression )','rect',10,'p_rect_type','parser.py',68),
  ('id_list -> expression','id_list',1,'p_id_list','parser.py',73),
  ('id_list -> expression , id_list','id_list',3,'p_id_list','parser.py',74),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser.py',83),
  ('expression -> expression MULT_OP expression','expression',3,'p_expression_op','parser.py',84),
  ('expression -> NUMBER','expression',1,'p_number','parser.py',88),
  ('expression -> ID','expression',1,'p_variable','parser.py',92),
  ('expression -> STRING','expression',1,'p_string','parser.py',97),
  ('expression -> scene','expression',1,'p_scene','parser.py',101),
  ('expression -> { program }','expression',3,'p_cli','parser.py',109),
  ('expression -> ( expression )','expression',3,'p_parenthesis','parser.py',113),
  ('member -> iden . climember','member',3,'p_member','parser.py',117),
  ('iden -> ID','iden',1,'p_iden','parser.py',126),
  ('climember -> FUNC','climember',1,'p_climember','parser.py',130),
  ('climember -> IMG','climember',1,'p_climember','parser.py',131),
  ('expression -> ADD_OP expression','expression',2,'p_uminus','parser.py',140),
]
